# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
    paths-ignore:
     - ".github/workflows/**"
     - "**.txt"
  pull_request:
    branches: [ "master" ]
    paths-ignore:
     - ".github/workflows/**"
     - "**.txt"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  linux_build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
          
      - name: Install dependecies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          python test_binary_search.py
          
      - name: Build executable
        run: pyinstaller --onefile --windowed binary_search.py

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: binary_search
          path: dist/binary_search.exe
          
      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: uploaded artifacts
          document: dist/binary_search.exe

  windows_build:
   runs-on: windows-latest
   steps:
      - name: build windows .exe
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
          
      - name: Install dependecies
        run: |
          py -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          py test_binary_search.py
          
      - name: Build executable
        run: pyinstaller --onefile binary_search.py

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: binary_search
          path: dist\
  
#   codacy:
#       runs-on: ubuntu-latest
#       steps:
#         - uses: actions/checkout@v3
#         - name: Run Codacy Analysis CLI
#           uses: codacy/codacy-analysis-cli-action@master
      
#   pysa:
#       runs-on: ubuntu-latest
#       steps:
#         - uses: actions/checkout@v2
#         - name: Run Pysa Action
#           uses: facebook/pysa-action@master
#           with:
#             repo-directory: './'
#             requirements-path: 'requirements.txt'
#             infer-types: true
#             include-default-sapp-filters: true
#             #sapp-filters-path: 'sapp_filters.json'
