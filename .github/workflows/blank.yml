name: BinarySearch

on:
  push:
    branches: [ "master" ]
    paths-ignore:
     - ".github/workflows/**"
     - "**.txt"
  pull_request:
    branches: [ "master" ]
    paths-ignore:
     - ".github/workflows/**"
     - "**.txt"

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
          
      - name: Install dependecies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          
      - name: Run test
        run: |
          pytest test_binary_search.py

  
  linux_build:
    name: build and upload in telegram
    needs: test
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
          
      - name: Install dependecies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build executable
        run: pyinstaller --name=${{ github.job }} --onefile app.py -p binary_search.py

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary_search
          path: dist/
          
      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Workflow triggered by ${{ github.event_name }} event
          document: dist/${{ github.job }}


  windows_build:
     name: build and upload
     needs: test
     runs-on: windows-latest

     steps:
        - uses: actions/checkout@v3

        - name: Setup Python
          uses: actions/setup-python@v3
          with:
            python-version: "3.x"

        - name: Install dependecies
          run: |
            py -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Build executable
          run: pyinstaller --name=${{ github.job }} --onefile app.py -p binary_search.py

        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            name: binary_search
            path: dist\


  send_windows_build:
     needs: windows_build
     runs-on: ubuntu-latest

     steps:
        - uses: actions/checkout@v3
     
        - name: Download artifact
          uses: actions/download-artifact@v3
          with:
            name: binary_search
            
        - run: ls -la

        - name: Send Telegram message
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_TO }}
            token: ${{ secrets.TELEGRAM_TOKEN }}
            message: Workflow triggered by ${{ github.event_name }} event
            document: windows_build.exe

  docker_build:
      name: containerisation
      needs: test
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3

        - name: Login in docker
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - uses: docker/setup-buildx-action@v2

        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            context: .
            file: ./dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/binary_search_app:latest
      
          
  self-hosted:
    runs-on: self-hosted
    needs: docker_build
    
    steps:
      - uses: actions/checkout@v3
          
      - name: Run docker image
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/binary_search_app:latest
          docker run ${{ secrets.DOCKERHUB_USERNAME }}/binary_search_app:latest
    
  codacy_check:
      name: static code review
      needs: test
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3

        - uses: codacy/codacy-analysis-cli-action@master
             
  auto_formatter:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install black

      - name: Format code
        run: black .

      - name: Commit and push changes
        if: github.event_name == 'push'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          status=$(git status)
          if [[ $status != *"nothing to commit"* ]]; then
            git commit -am "Auto-format Python code"
            git push
          fi
