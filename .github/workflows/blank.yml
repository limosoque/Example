# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
    paths-ignore:
     - ".github/workflows/**"
     - "**.txt"
  pull_request:
    branches: [ "master" ]
    paths-ignore:
     - ".github/workflows/**"
     - "**.txt"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  linux_build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
          
      - name: Install dependecies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          python test_binary_search.py
          
      - name: Build executable
        run: pyinstaller --name=${{ github.job }} --onefile app.py -p binary_search.py

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary_search
          path: dist/
          
      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Workflow triggered by ${{ github.event_name }} event
          document: dist/${{ github.job }}

  windows_build:
   runs-on: windows-latest
   steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
          
      - name: Install dependecies
        run: |
          py -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          py test_binary_search.py
          
      - name: Build executable
        run: pyinstaller --name=${{ github.job }} --onefile app.py -p binary_search.py

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary_search
          path: dist\
        
  docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Login in docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - uses: docker/setup-buildx-action@v2
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/binary_search_app:latest
      
  
  codacy:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Run Codacy Analysis CLI
          uses: codacy/codacy-analysis-cli-action@master
      
  pysa:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Run Pysa Action
          uses: facebook/pysa-action@master
          with:
            repo-directory: './'
            requirements-path: 'requirements.txt'
            infer-types: true
            include-default-sapp-filters: true
            #sapp-filters-path: 'sapp_filters.json'
            
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install black
      - name: Format code
        run: black .
      - name: Commit changes
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -am "Auto-format Python code [skip ci]"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
